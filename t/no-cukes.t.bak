#!/usr/bin/env perl -w


package Deeper::Object;
use strict;

use Moo;

sub deeper_action {

   print "my action\n";
   return 1;

}

sub DESTROY {
   print "destroy deeper\n";
}

1;

package Inside::Object;
use strict;

use Moo;
use Deeper::Object;

has deeper => (is=>'rw',lazy=>1,builder=>1);

sub _build_deeper {
  return Deeper::Object->new();
}
sub DESTROY {
   print "destroy inside\n";
}

1;


package Outside::Object;
use strict;

use Moo;
use Inside::Object;

has inside => (is=>'rw',lazy=>1,builder=>1);

sub _build_inside {
  return Inside::Object->new();
}

sub DESTROY {
   my ($self)=@_;
   print "destroy outside\n";
   return $self->inside->deeper->deeper_action();

}

1;

use strict;
use Test::More 'no_plan';
use Outside::Object;

my $o;

sub a {
    $o = Outside::Object->new();
    isa_ok($o,'Outside::Object');

}

sub b{
    ok $o->inside;
}

sub c{
    ok $o->inside->deeper->deeper_action;
};

a();
b();
c();

